#
# JOB, ktery svou praci dokonci a lze jej pouzit pro testovani pozitivniho scenare. 
#   - dokonci=pripoji do mssql a nasadi uspesne zmenu/skript. 
#   - metadata.name=flyway-job-check-status je stejny (pro oba pripady)
#     + protoze ve skriptech se k nim chovam stejne (startuji vzdy jeden, mazu vzdy stejny job.yaml)
#
# Pozn: 
# Nazvy image/URL sice obsahuji sice slovo fail (napr. tocecz/flyway-kubernetes-fail), 
# ale to je jenom z duvodu, pouzivam STEJNOU docker image/URL pro oba (positivni, negativni) scenare.
#
# RESULT:
#   - kubectl get pods, STATUS=Completed (positivni scenario)
#
apiVersion: batch/v1
kind: Job
metadata:
  name: flyway-job-check-status
spec:
  template:
    spec:
      containers:
        - name: flyway
          image: tocecz/flyway-kubernetes-fail
          # @see https://www.docker.com/blog/how-kubernetes-works-under-the-hood-with-docker-desktop/
          # set the image pull policy to IfNotPresent. This ensures that the image from the local cache is going to be used.
          imagePullPolicy: IfNotPresent
          command: ["flyway", "migrate"]
          env:
          - name: FLYWAY_USER
            value: sa
          - name: FLYWAY_PASSWORD
            value: "Flyway123"
          - name: FLYWAY_URL
            value: "jdbc:sqlserver://flyway-kubernetes-fail-mssql:1433;databaseName=flywaydb;trustServerCertificate=true"            
          #volumeMounts:
          #  - name: flyway-config-volume
          #    mountPath: /flyway/conf
      #volumes:
      #  - name: flyway-config-volume
      #    configMap:
      #        name: flyway-configmap
      restartPolicy: Never
  backoffLimit: 1